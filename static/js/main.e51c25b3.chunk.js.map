{"version":3,"sources":["App.js","index.js"],"names":["emogiDictionary","emojiweknow","Object","keys","App","useState","emojiInput","setEmojiInput","className","onChange","event","userinput","target","value","emogi_description","undefined","style","padding","fontSize","cursor","map","emogi","onClick","emogiClickHandler","console","log","rootElement","document","getElementById","createRoot","render"],"mappings":"uKAEMA,EAAkB,CACtB,eAAM,eACN,eAAM,iCACN,eAAM,yBACN,eAAM,2BACN,eAAM,+BACN,eAAM,cACN,eAAM,sBACN,eAAM,gBAEJC,EAAcC,OAAOC,KAAKH,GAEf,SAASI,IACtB,MAAoCC,mBAAS,IAAG,mBAAzCC,EAAU,KAAEC,EAAa,KAahC,OACE,sBAAKC,UAAU,MAAK,UAClB,6BAAI,iBACJ,uBAAOC,SAfX,SAA2BC,GACzB,IAAIC,EAAYD,EAAME,OAAOC,MACzBC,EAAoBd,EAAgBW,QACdI,IAAtBD,IACFA,EAAoB,6CAEtBP,EAAcO,EAChB,IAUI,qBAAKE,MAAO,CAAEC,QAAS,QAAS,SAAEX,IAElC,qBAAKU,MAAO,CAAEE,SAAU,OAAQC,OAAQ,WAAY,SACjDlB,EAAYmB,KAAI,SAAUC,GACzB,OACE,sBAAMC,QAAS,kBAdzB,SAA2BD,GACzB,IAAIP,EAAoBd,EAAgBqB,GACxCd,EAAcO,EAChB,CAW+BS,CAAkBF,EAAM,EAAC,SAC3CA,GADiDA,EAIxD,QAIR,CAjCAG,QAAQC,IAAIxB,GCRZ,IAAMyB,EAAcC,SAASC,eAAe,QAC/BC,qBAAWH,GAEnBI,OACH,cAAC,aAAU,UACT,cAAC1B,EAAG,M","file":"static/js/main.e51c25b3.chunk.js","sourcesContent":["import { useState } from \"react\";\nimport \"./styles.css\";\nconst emogiDictionary = {\n  \"üòâ\": \"Winking Face\",\n  \"üòä\": \"Smiling Face with Smiling Eyes\",\n  \"üòá\": \"Smiling Face with Halo\",\n  \"ü•∞\": \"Smiling Face with Hearts\",\n  \"üòç\": \"Smiling Face with Heart-Eyes\",\n  \"ü§©\": \"Star-Struck\",\n  \"üòò\": \"Face Blowing a Kiss\",\n  \"üòó\": \"Kissing Face\"\n};\nvar emojiweknow = Object.keys(emogiDictionary);\nconsole.log(emojiweknow);\nexport default function App() {\n  const [emojiInput, setEmojiInput] = useState(\"\");\n  function emogiInputHandler(event) {\n    var userinput = event.target.value;\n    var emogi_description = emogiDictionary[userinput];\n    if (emogi_description === undefined) {\n      emogi_description = \"This emogi meaning is not in our database\";\n    }\n    setEmojiInput(emogi_description);\n  }\n  function emogiClickHandler(emogi) {\n    var emogi_description = emogiDictionary[emogi];\n    setEmojiInput(emogi_description);\n  }\n  return (\n    <div className=\"App\">\n      <h1>Inside outtt</h1>\n      <input onChange={emogiInputHandler}></input>\n\n      <div style={{ padding: \"2rem\" }}>{emojiInput}</div>\n\n      <div style={{ fontSize: \"2rem\", cursor: \"pointer\" }}>\n        {emojiweknow.map(function (emogi) {\n          return (\n            <span onClick={() => emogiClickHandler(emogi)} key={emogi}>\n              {emogi}\n            </span>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n","import { StrictMode } from \"react\";\nimport { createRoot } from \"react-dom/client\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\n\nroot.render(\n  <StrictMode>\n    <App />\n  </StrictMode>\n);\n"],"sourceRoot":""}